// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rtipo;

#nullable disable

namespace rtipo.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230604194925_AddEntities")]
    partial class AddEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("rtipo.Entities.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ChipNumber")
                        .HasColumnType("int");

                    b.Property<int>("LocalityId")
                        .HasColumnType("int");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OwnerSignsId")
                        .HasColumnType("int");

                    b.Property<string>("Photos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Registration_number")
                        .HasColumnType("int");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Special_signs")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LocalityId");

                    b.HasIndex("OwnerSignsId");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("rtipo.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("rtipo.Entities.Inspection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("Condition_animal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Condition_wool")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Damage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Emergency_assistance")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Features")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Inspection_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Manipulations_performed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MunicipalContractsId")
                        .HasColumnType("int");

                    b.Property<int>("OrganisationId")
                        .HasColumnType("int");

                    b.Property<string>("Skin_covers")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Temperature")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Treatment_prescribed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("MunicipalContractsId");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("UserId");

                    b.ToTable("Inspections");
                });

            modelBuilder.Entity("rtipo.Entities.Locality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Localities");
                });

            modelBuilder.Entity("rtipo.Entities.MunicipalContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Agreenent_date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Contract_number")
                        .HasColumnType("int");

                    b.Property<int>("OrganisationExecutorIdId")
                        .HasColumnType("int");

                    b.Property<int>("OrganisationOrderIdId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Validaity_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationExecutorIdId");

                    b.HasIndex("OrganisationOrderIdId");

                    b.ToTable("MunicipalContracts");
                });

            modelBuilder.Entity("rtipo.Entities.Organisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Full_title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("INN")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsIndividual")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("KPP")
                        .HasColumnType("bigint");

                    b.Property<int>("LocalityId")
                        .HasColumnType("int");

                    b.Property<int>("OrganisationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Registration_address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LocalityId");

                    b.HasIndex("OrganisationTypeId");

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("rtipo.Entities.OrganisationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("OrganisationTypes");
                });

            modelBuilder.Entity("rtipo.Entities.OwnerSign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("OwnerSigns");
                });

            modelBuilder.Entity("rtipo.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Middle_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OrganisationId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("rtipo.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("rtipo.Entities.Animal", b =>
                {
                    b.HasOne("rtipo.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rtipo.Entities.Locality", "Locality")
                        .WithMany()
                        .HasForeignKey("LocalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rtipo.Entities.OwnerSign", "OwnerSigns")
                        .WithMany()
                        .HasForeignKey("OwnerSignsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Locality");

                    b.Navigation("OwnerSigns");
                });

            modelBuilder.Entity("rtipo.Entities.Inspection", b =>
                {
                    b.HasOne("rtipo.Entities.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rtipo.Entities.MunicipalContract", "MunicipalContracts")
                        .WithMany()
                        .HasForeignKey("MunicipalContractsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rtipo.Entities.Organisation", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rtipo.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("MunicipalContracts");

                    b.Navigation("Organisation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("rtipo.Entities.MunicipalContract", b =>
                {
                    b.HasOne("rtipo.Entities.Organisation", "OrganisationExecutorId")
                        .WithMany("Executor")
                        .HasForeignKey("OrganisationExecutorIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rtipo.Entities.Organisation", "OrganisationOrderId")
                        .WithMany("Order")
                        .HasForeignKey("OrganisationOrderIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganisationExecutorId");

                    b.Navigation("OrganisationOrderId");
                });

            modelBuilder.Entity("rtipo.Entities.Organisation", b =>
                {
                    b.HasOne("rtipo.Entities.Locality", "Locality")
                        .WithMany()
                        .HasForeignKey("LocalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rtipo.Entities.OrganisationType", "OrganisationType")
                        .WithMany()
                        .HasForeignKey("OrganisationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locality");

                    b.Navigation("OrganisationType");
                });

            modelBuilder.Entity("rtipo.Entities.User", b =>
                {
                    b.HasOne("rtipo.Entities.Organisation", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rtipo.Entities.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organisation");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("rtipo.Entities.Organisation", b =>
                {
                    b.Navigation("Executor");

                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
